# This is a basic workflow to help you get started with Actions

name: UMGC CITY WEB API TEST

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
    tags:
      - '*'
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a dependent jobs
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2
           
      - name: Build and Test with Maven
        run: mvn test

  coverage:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: test

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          
      - name: Code Coverage Check
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2
           
      - name: Build and Test with Maven
        continue-on-error: true
        env: 
          SONAR_TOKEN: ${{secrets.SONAR_UMGCCITY_WEB}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=umgc.city.team1 -Dsonar.organization=umgc -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN

    
